===================================
Install EPrints on Ubuntu 22.04 LTS
===================================
sudo apt-get update -y && apt-get upgrade -y && apt-get autoremove -y --purge && apt-get autoclean -y
sudo apt-get install -y nano ntp neofetch curl wget git zip unzip rar unrar
hostnamectl set-hostname [YOUR_HOSTNAME] && hostname
nano /etc/ssh/sshd_config
# set:
	LoginGraceTime 120
	ClientAliveInterval 120
	ClientAliveCountMax 720
service ssh restart
systemctl enable ntp && dpkg-reconfigure tzdata && date
swapon --show
fallocate -l 4G /swapfile && chmod 600 /swapfile
mkswap /swapfile && swapon /swapfile && swapon --show
nano /etc/fstab
# paste it at last line:
/swapfile swap swap defaults 0 0
# check again
swapon --show

nano /etc/apt/sources.list.d/eprints.list
deb http://deb.eprints-hosting.org/3.4/stable/ ./
wget -O /etc/apt/trusted.gpg.d/eprints.gpg http://deb.eprints.org/keyFile.gpg && apt-get update

# install xpdf
apt install libpoppler-dev xpdf -y

# install eprints
apt-cache show eprints
apt-get install eprints=3.4.4
# it will be installed to: /usr/share/eprints/

# install publications flavour
wget https://files.eprints.org/2715/2/eprints-3.4.4-flavours.tar.gz
tar -xzvf eprints-3.4.4-flavours.tar.gz -C /usr/share/eprints/
mv /usr/share/eprints/eprints-3.4.4/flavours /usr/share/eprints/
rmdir /usr/share/eprints/eprints-3.4.4/
rm eprints-3.4.4-flavours.tar.gz

# set password for mysql
mysql -u root
USE mysql;
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '[YOUR_PASSWORD]';
FLUSH PRIVILEGES;
exit

sudo su eprints
cd /usr/share/eprints/
./bin/epadmin create pub
# Archive ID? eprints
# Configure vital settings? [yes] ? ENTER
# Hostname? [YOUR_SUBDOMAIN]
# Webserver Port [80] ? ENTER
# Alias (enter # when done) [#] ? ENTER
# Path [/] ? ENTER
# HTTPS Hostname [] ? ENTER
# Administrator Email? [YOUR_SYSTEM_EMAIL_OR_ADMIN_EMAIL]
# Archive Name [Test Repository] ? [YOUR_REPOSITORY_NAME]
# Organisation Name [Organisation of Test] ? [YOUR_ORG_NAME]
# Write these core settings? [yes] ? ENTER
# Configure database? [yes] ? ENTER
# Database Name [eprints] ? ENTER
# MySQL Host [localhost] ? ENTER
# MySQL Port (# for no setting) [#] ? ENTER
# MySQL Socket (# for no setting) [#] ? ENTER
# Database User [eprints] ? ENTER
# Database Password [h6oJF41f] ENTER
# Database Engine [InnoDB] ? ENTER
# Write these database settings? [yes] ? ENTER
# Create database "eprints" [yes] ? ENTER
# Database Superuser Username [root] ? ENTER
# Database Superuser Password? [YOUR_PASSWORD]
# Create database tables? [yes] ? ENTER
# Create an initial user? [yes] ? ENTER
# Enter a username [admin] ? ENTER
# Select a user type (user|editor|admin) [admin] ? ENTER
# Do you want to build the static web pages? [yes] ? ENTER
# Do you want to import the LOC subjects and sample divisions? [yes] ? ENTER
# Do you want to update the apache config files? (you still need to add the 'Include' line) [yes] ? ENTER
exit
# prevent error "could not reliably determine the server's fully qualified domain name"
nano /etc/apache2/apache2.conf
# paste it to last line
ServerName localhost
# save & exit
# enable some apache modules
a2enmod rewrite deflate env headers mime dir ssl http2 setenvif
# don't remove eprints in sites-available, it's symbolic link for eprints.conf, just enable eprints.conf
a2ensite eprints.conf
# must disable the default site otherwise the default Apache page will still be shown
a2dissite 000-default.conf
apachectl -t
systemctl reload apache2

crontab -e
	# auto apt update and upgrade
	30 0 * * * php -r 'sleep(rand(0,1799));' && apt update -y >/dev/null 2>&1 && apt upgrade -y >/dev/null 2>&1
	# reboot server every day at 04:00 AM
	00  4  *  *  * /sbin/shutdown -r now

# go to your subdomain with http://[YOUR_SUBDOMAIN]

# install let's encrypt
sudo apt install -y certbot python3-certbot-apache && certbot --version
certbot --apache certonly

# Successfully received certificate.
# Certificate is saved at: /etc/letsencrypt/live/[YOUR_SUBDOMAIN]/fullchain.pem
# Key is saved at:         /etc/letsencrypt/live/[YOUR_SUBDOMAIN]/privkey.pem

mkdir /usr/share/eprints/archives/eprints/ssl/
nano /usr/share/eprints/archives/eprints/ssl/securevhost.conf

<VirtualHost *:443>
ServerName [YOUR_SUBDOMAIN]:443
SSLEngine on
SSLCertificateFile /etc/letsencrypt/live/[YOUR_SUBDOMAIN]/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/[YOUR_SUBDOMAIN]/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/[YOUR_SUBDOMAIN]/chain.pem
Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
SSLProtocol all -SSLv3
SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA
SSLHonorCipherOrder on
SSLCompression off
SSLSessionTickets off
ErrorLog ${APACHE_LOG_DIR}/error_eprints.log
CustomLog ${APACHE_LOG_DIR}/access_eprints.log combined
Include /usr/share/eprints/cfg/apache_ssl/eprints.conf
PerlTransHandler +EPrints::Apache::Rewrite 
</VirtualHost>

nano /usr/share/eprints/archives/eprints/cfg/cfg.d/10_core.pl
# make sure conf like this:
$c->{host} = undef;
$c->{port} = 80;
$c->{aliases} = [];
$c->{securehost} = '[YOUR_SUBDOMAIN]';
$c->{secureport} = 443;
$c->{http_root} = undef;

sudo su eprints
cd /usr/share/eprints/
./bin/generate_apacheconf --system --replace
exit
apachectl -t
systemctl reload apache2

nano /etc/apache2/sites-available/eprints
# add the following line, changing the path as appropriate:
Include /usr/share/eprints/archives/eprints/ssl/securevhost.conf
apachectl configtest
systemctl reload apache2

# go to your subdomain with https://[YOUR_SUBDOMAIN]

# don't forget to register your repository at
# http://roar.eprints.org/
# and
# https://rama.kemdikbud.go.id/

# Troubleshoot EPrints: MySQL root user cannot be used
CREATE USER 'eprints'@'localhost' IDENTIFIED by 'changeme';
GRANT ALL PRIVILEGES ON *.* TO 'eprints'@'localhost' WITH GRANT OPTION;

# Troubleshoot EPrints: Add Logo and Change Theme
# https://www.youtube.com/watch?v=FhHnO1DQj_s
# bisa dicopy dari themes eprints yang lama ke config archives
# kemudian brand.pl yang ada di lib/cfg.d di copy kedalam config archives kita
# kemudian panggil nama themesnya

############################################
# ACTIVATE FAIL2BAN FOR SSH
############################################
sudo apt install fail2ban
# To see the status of Fail2ban run:
systemctl status fail2ban
# Make a new Fail2ban config file named jail.local, the jail.local one will override the main Fail2ban config called jail.conf
# `port` line must match with ssh config
nano /etc/fail2ban/jail.local
	[DEFAULT]
	bantime = 10m
	findtime = 10m
	maxretry = 5
	backend = systemd
	[sshd]
	enabled = true
	logpath = %(sshd_log)s
	port = 10022
	banaction = iptables
	maxretry = 3
# After you make changes, restart Fail2ban:
systemctl restart fail2ban
# Now your server is analyzing logs and banning IP addresses. Check the status of the jail by running:
fail2ban-client status sshd
# If you are using Cloudflare proxy, you can set up a couple of rules at /etc/fail2ban/action.d/cloudflare.conf

############################################
# [OPTIONAL]
# Install phpmyadmin with php 7.4
############################################
sudo apt install software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo apt update
sudo apt install php7.4 libapache2-mod-php7.4 php-common php-pear php7.4-cli php7.4-curl php7.4-common php7.4-gd php7.4-gettext php7.4-imagick php7.4-intl php7.4-json php7.4-mbstring php7.4-mysql php7.4-pgsql php7.4-opcache php7.4-readline php7.4-zip php7.4-bcmath php7.4-bz2 php7.4-ldap php7.4-imap php7.4-soap php7.4-sybase php7.4-xdebug php7.4-xml php7.4-xmlrpc php7.4-xsl
php -v
mv /etc/php/7.4/apache2/php.ini /etc/php/7.4/apache2/php.ini.bak
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/php8.1-fpm/php.ini > /etc/php/7.4/apache2/php.ini
systemctl reload apache2
# backup old phpmyadmin: cd /var/www && date=$(date +%Y-%m-%d_%H-%M) && mv phpmyadmin phpmyadmin_old_${date}
mkdir -p /var/www/phpmyadmin && cd /var/www/phpmyadmin && wget https://files.phpmyadmin.net/phpMyAdmin/5.2.0/phpMyAdmin-5.2.0-english.zip && unzip phpMyAdmin-5.2.0-english.zip && mv phpMyAdmin-5.2.0-english*/* . && rm -rf phpMyAdmin-* && mv config.sample.inc.php config.inc.php && chown -R www-data:www-data /var/www/phpmyadmin
# custom config
sed -i "s/$cfg\['blowfish_secret'\] =.*/$cfg\['blowfish_secret'\] = '5DS+D0TOqIn-ebPHX+cH7DoDrKadU3zw';\n\$cfg\['LoginCookieValidity'\] = '7200';/" /var/www/phpmyadmin/config.inc.php
sed -i "s/$i++;/$i++;\n\$cfg\['Servers'\]\[\$i\]\['hide_db'\] = 'mysql|information_schema|performance_schema|test|phpmyadmin|sys';/" /var/www/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['DefaultCharset'] = 'utf8';" /var/www/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['DefaultConnectionCollation'] = 'utf8mb4_general_ci';" /var/www/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['MaxNavigationItems'] = 1000;" /var/www/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['NavigationTreeEnableGrouping'] = false;" /var/www/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['NavigationDisplayLogo'] = false;" /var/www/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['TitleTable'] = 'Data | @DATABASE@ / @TABLE@';" /var/www/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['TitleDatabase'] = 'Data | @DATABASE@';" /var/www/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['TitleServer'] = 'Data';" /var/www/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['TitleDefault'] = 'Data';" /var/www/phpmyadmin/config.inc.php
nano +79 /var/www/phpmyadmin/templates/login/form.twig
# search label for="input_username" and find <input>, change type "text" to "password"
nano /etc/apache2/sites-available/data-phpmyadmin.conf
# copy and paste it:
<VirtualHost *:80>
ServerName [YOUR_PHPMYADMIN_SUBDOMAIN]
DocumentRoot /var/www/phpmyadmin
DirectoryIndex index.php
Options -Indexes +IncludesNOEXEC +SymLinksIfOwnerMatch +ExecCGI
<Directory /var/www/phpmyadmin/templates>
Require all denied
</Directory>
<Directory /var/www/phpmyadmin/libraries>
Require all denied
</Directory>
ErrorLog ${APACHE_LOG_DIR}/error.log
CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
# enable it
a2ensite data-phpmyadmin.conf
systemctl reload apache2
# go to http://[YOUR_PHPMYADMIN_SUBDOMAIN]
certbot --apache certonly
# Successfully received certificate.
# Certificate is saved at: /etc/letsencrypt/live/[YOUR_PHPMYADMIN_SUBDOMAIN]/fullchain.pem
# Key is saved at:         /etc/letsencrypt/live/[YOUR_PHPMYADMIN_SUBDOMAIN]/privkey.pem
> /etc/apache2/sites-available/data-phpmyadmin.conf && nano /etc/apache2/sites-available/data-phpmyadmin.conf
# copy and paste it:
<VirtualHost *:80>
ServerName [YOUR_PHPMYADMIN_SUBDOMAIN]
Redirect permanent / https://[YOUR_PHPMYADMIN_SUBDOMAIN]
</VirtualHost>
<VirtualHost *:443>
ServerName [YOUR_PHPMYADMIN_SUBDOMAIN]
DocumentRoot /var/www/phpmyadmin
DirectoryIndex index.php
Options -Indexes +IncludesNOEXEC +SymLinksIfOwnerMatch +ExecCGI
SSLEngine on
SSLCertificateFile /etc/letsencrypt/live/[YOUR_PHPMYADMIN_SUBDOMAIN]/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/[YOUR_PHPMYADMIN_SUBDOMAIN]/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/[YOUR_PHPMYADMIN_SUBDOMAIN]/chain.pem
Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
SSLProtocol all -SSLv2 -SSLv3
SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA
SSLHonorCipherOrder on
SSLCompression off
SSLSessionTickets off
<Directory /var/www/phpmyadmin/templates>
Require all denied
</Directory>
<Directory /var/www/phpmyadmin/libraries>
Require all denied
</Directory>
ErrorLog ${APACHE_LOG_DIR}/error.log
CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
systemctl reload apache2
# go to https://[YOUR_PHPMYADMIN_SUBDOMAIN]

############################################
# [OPTIONAL]
# Migrate OJS
############################################
# import db to phpmyadmin
# put OJS web path dan OJS filedir path to /var/www/
nano /etc/apache2/sites-available/[YOUR_OJS].conf
<VirtualHost *:80>
ServerName [YOUR_OJS]
DocumentRoot /var/www/[YOUR_OJS]/
Options -Indexes +IncludesNOEXEC +SymLinksIfOwnerMatch +ExecCGI
DirectoryIndex index.php
<Directory "/var/www/[YOUR_OJS]">
AllowOverride All
</Directory>
ErrorLog /var/www/[YOUR_OJS]/error.log
CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
# enable it
a2ensite [YOUR_OJS].conf
systemctl reload apache2
# go to http://[YOUR_OJS]
certbot --apache certonly
# Successfully received certificate.
# Certificate is saved at: /etc/letsencrypt/live/[YOUR_OJS]/fullchain.pem
# Key is saved at:         /etc/letsencrypt/live/[YOUR_OJS]/privkey.pem
> /etc/apache2/sites-available/[YOUR_OJS].conf && nano /etc/apache2/sites-available/[YOUR_OJS].conf
# copy and paste it:
<VirtualHost *:80>
ServerName [YOUR_OJS]
Redirect permanent / https://[YOUR_OJS]
</VirtualHost>
<VirtualHost *:443>
ServerName [YOUR_OJS]
DocumentRoot /var/www/[YOUR_OJS]
DirectoryIndex index.php
SSLEngine on
SSLCertificateFile /etc/letsencrypt/live/[YOUR_OJS]/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/[YOUR_OJS]/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/[YOUR_OJS]/chain.pem
Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
SSLProtocol all -SSLv2 -SSLv3
SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA
SSLHonorCipherOrder on
SSLCompression off
SSLSessionTickets off
<Directory /var/www/[YOUR_OJS]>
Options -Indexes +IncludesNOEXEC +SymLinksIfOwnerMatch +ExecCGI
AllowOverride All Options=ExecCGI,Includes,IncludesNOEXEC,Indexes,MultiViews,SymLinksIfOwnerMatch
allow from all
Require all granted
</Directory>
ErrorLog /var/www/[YOUR_OJS]/error.log
CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
systemctl reload apache2
# go to https://[YOUR_OJS]

############################################
# [OPTIONAL]
# Apache Logging
############################################
# Keep apache logs of last 30 days for project in /var/www
nano /etc/logrotate.d/apache2
# Add this line, make sure "7" in rotate:
/var/www/ejournal.bbg.ac.id/*.log {
    su root root
    daily
    missingok
    rotate 7
    compress
    delaycompress
    notifempty
    create 660 www-data www-data
    sharedscripts
    prerotate
        if [ -d /etc/logrotate.d/httpd-prerotate ]; then
            run-parts /etc/logrotate.d/httpd-prerotate
        fi
    endscript
    postrotate
        if pgrep -f ^/usr/sbin/apache2 > /dev/null; then
            invoke-rc.d apache2 reload 2>&1 | logger -t apache2.logrotate
        fi
    endscript
}
/var/www/eproceeding.bbg.ac.id/*.log {
    su root root
    daily
    missingok
    rotate 7
    compress
    delaycompress
    notifempty
    create 660 www-data www-data
    sharedscripts
    prerotate
        if [ -d /etc/logrotate.d/httpd-prerotate ]; then
            run-parts /etc/logrotate.d/httpd-prerotate
        fi
    endscript
    postrotate
        if pgrep -f ^/usr/sbin/apache2 > /dev/null; then
            invoke-rc.d apache2 reload 2>&1 | logger -t apache2.logrotate
        fi
    endscript
}
/var/www/jim.bbg.ac.id/*.log {
    su root root
    daily
    missingok
    rotate 7
    compress
    delaycompress
    notifempty
    create 660 www-data www-data
    sharedscripts
    prerotate
        if [ -d /etc/logrotate.d/httpd-prerotate ]; then
            run-parts /etc/logrotate.d/httpd-prerotate
        fi
    endscript
    postrotate
        if pgrep -f ^/usr/sbin/apache2 > /dev/null; then
            invoke-rc.d apache2 reload 2>&1 | logger -t apache2.logrotate
        fi
    endscript
}
# Execute it
logrotate /etc/logrotate.d/apache2
