@ UBUNTU 22.04

#####################
# DNS Zone
#####################
sister.bbg.ac.id		14400		A		117.53.46.95
www.sister.bbg.ac.id.		14400		CNAME		sister.bbg.ac.id


#####################
# SSH
#####################
ssh root@117.53.46.95
???????????


#####################
# SET UP
#####################
sudo apt-get update -y && apt-get upgrade -y && apt-get autoremove -y --purge && apt-get autoclean -y
sudo apt-get install nano neofetch curl wget git zip unzip rar unrar
hostnamectl set-hostname sister.bbg.ac.id && hostname
nano /etc/ssh/sshd_config
# set:
	LogLevel VERBOSE
	LoginGraceTime 120
	PasswordAuthentication yes
	KbdInteractiveAuthentication no
	UsePAM yes
	X11Forwarding no
	PrintMotd yes
	ClientAliveInterval 120
	ClientAliveCountMax 720
	AcceptEnv LANG LC_*
	Subsystem sftp  /usr/lib/openssh/sftp-server
service ssh restart


#####################
# POSTFIX
#####################
sudo DEBIAN_PRIORITY=low apt install postfix
# Choose: Internet Site
# System mail name: sister.bbg.ac.id
sudo apt install mailutils
########sudo apt-get install postfix mailutils libsasl2-2 ca-certificates libsasl2-modules


#####################
# NGINX + PHP5.6-FPM
#####################
sudo add-apt-repository ppa:ondrej/php
sudo apt-get update -y && sudo apt-get upgrade -y
sudo apt-get install nginx nginx-extras
nginx -v
sudo apt-get install php5.6-fpm php5.6-amqp php5.6-bcmath php5.6-bz2 php5.6-cgi php5.6-cli php5.6-common php5.6-curl php5.6-dba php5.6-dev php5.6-enchant php5.6-gd php5.6-gearman php5.6-geoip php5.6-gmp php5.6-gnupg php5.6-grpc php5.6-http php5.6-igbinary php5.6-imagick php5.6-imap php5.6-inotify php5.6-interbase php5.6-intl php5.6-json php5.6-ldap php5.6-libvirt-php php5.6-lua php5.6-lz4 php5.6-mailparse php5.6-mbstring php5.6-mcrypt php5.6-memcache php5.6-memcached php5.6-msgpack php5.6-mysql php5.6-mysqlnd-ms php5.6-oauth php5.6-odbc php5.6-opcache php5.6-pgsql php5.6-phalcon3 php5.6-phpdbg php5.6-propro php5.6-protobuf php5.6-ps php5.6-pspell php5.6-radius php5.6-raphf php5.6-readline php5.6-recode php5.6-redis php5.6-snmp php5.6-soap php5.6-solr php5.6-sqlite3 php5.6-ssh2 php5.6-stomp php5.6-sybase php5.6-tidy php5.6-xcache php5.6-xdebug php5.6-xhprof php5.6-xml php5.6-zip
php -v
curl -I http://117.53.46.95

openssl dhparam -dsaparam -out /etc/nginx/dhparam.pem 4096

chmod 733 /var/lib/php/sessions && chmod +t /var/lib/php/sessions

sed -i "s/error_reporting = .*/error_reporting = E_ALL \& ~E_NOTICE \& ~E_STRICT \& ~E_DEPRECATED/" /etc/php/5.6/fpm/php.ini
sed -i "s/display_errors = .*/display_errors = Off/" /etc/php/5.6/fpm/php.ini
sed -i "s/memory_limit = .*/memory_limit = 512M/" /etc/php/5.6/fpm/php.ini
sed -i "s/upload_max_filesize = .*/upload_max_filesize = 256M/" /etc/php/5.6/fpm/php.ini
sed -i "s/post_max_size = .*/post_max_size = 64M/" /etc/php/5.6/fpm/php.ini
sed -i "s/;cgi.fix_pathinfo.*/cgi.fix_pathinfo = 0/" /etc/php/5.6/fpm/php.ini
sed -i "s/;date.timezone.*/date.timezone = Asia\/Jakarta/" /etc/php/5.6/fpm/php.ini

nano /etc/php/5.6/fpm/php.ini
# replace
;extension
# to
extension

sed -i "s/;listen\.mode =.*/listen.mode = 0666/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/;request_terminate_timeout =.*/request_terminate_timeout = 60/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/pm\.max_children =.*/pm.max_children = 70/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/pm\.start_servers =.*/pm.start_servers = 20/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/pm\.min_spare_servers =.*/pm.min_spare_servers = 20/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/pm\.max_spare_servers =.*/pm.max_spare_servers = 35/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/;pm\.max_requests =.*/pm.max_requests = 1000/" /etc/php/5.6/fpm/pool.d/www.conf

sed -i "s/worker_processes.*/worker_processes auto;/" /etc/nginx/nginx.conf
sed -i "s/# multi_accept.*/multi_accept on;/" /etc/nginx/nginx.conf
sed -i "s/# server_names_hash_bucket_size.*/server_names_hash_bucket_size 128;/" /etc/nginx/nginx.conf
sed -i "s/# server_tokens off/server_tokens off/" /etc/nginx/nginx.conf

systemctl restart nginx && systemctl restart php5.6-fpm


#####################
# COMPOSER 1.10.26
#####################
cd /opt && curl -sS https://getcomposer.org/installer | php -- --1 && ls
sudo mv composer.phar /usr/bin/composer && sudo chmod +x /usr/bin/composer && composer --version


#####################
# LARAVEL 5.1.46
#####################
cd /var/www
composer create-project laravel/laravel="5.1.*" sisterdev
# continue as root/super user [yes]? yes
sudo chmod -R 755 /var/www/sisterdev
sudo chown -R www-data:www-data /var/www/sisterdev
cd sisterdev
composer install
# continue as root/super user [yes]? yes
php artisan key:generate
nano config/app.php
# ctrl + w : app_key, paste APP_KEY here
	'env' => env('APP_ENV', 'production'),
	'debug' => env('APP_DEBUG', false),
	'url' => 'http://localhost',
	'timezone' => 'Asia/Jakarta',
	'locale' => env('LOCALE','id'),
	'fallback_locale' => env('FALLBACK_LOCALE','id'),
# show laravel version
php artisan --version

# check db connection status
php artisan tinker
DB::connection()->getPdo();
# if connection is OK, you should see: CONNECTION_STATUS: "Connection OK; waiting to send.",

nano .env
# In case you are installing Laravel in a development environment, you can leave the APP_DEBUG option enabled, as this will give you important debug information while testing the application from a browser. The APP_ENV variable should be set to "development" in this case.
# In case you are installing Laravel in a production environment, you should disable the APP_DEBUG option, because it shows to the final user sensitive information about your application. The APP_ENV in this case should be set to "production"
	APP_NAME: Application name, used for notifications and messages.
	APP_ENV: Current application environment.
	APP_KEY: Used for generating salts and hashes, this unique key is automatically created when installing Laravel via Composer, so you donâ€™t need to change it.
	APP_DEBUG: Whether or not to show debug information at client side.
	APP_URL: Base URL for the application, used for generating application links.
	DB_DATABASE: Database name.
	DB_USERNAME: Username to connect to the database.
	DB_PASSWORD: Password to connect to the database.
# save and exit

# edit nginx server block and point root to public directory of your project
nano /etc/nginx/sites-available/sisterdev
    listen 80;
    root /var/www/sisterdev/public;
    index index.php;
    server_name sisterdev.bbg.ac.id;
    location / {
        #try_files $uri $uri/ /index.php$is_args$args;
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        # With php-fpm (or other unix sockets):
        fastcgi_pass unix:/run/php/php5.6-fpm.sock;
        # With php-cgi (or other tcp sockets):
        #fastcgi_pass 127.0.0.1:9000;
    }
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        try_files $uri /$1;
        allow all;
    }
    location ^~ /.well-known/security.txt {
        default_type "text/plain";
        try_files $uri /$1;
        allow all;
    }
    location ^~ /.well-known/assetlinks.json {
        return 404;
    }
    location ^~ /.well-known/apple-app-site-association {
        return 404;
    }
ln -s /etc/nginx/sites-available/sisterdev /etc/nginx/sites-enabled/
# save and exit
nginx -t
# if ok, type: nginx -s reload

curl -l http://sisterdev.bbg.ac.id


##################################
# LET'S ENCRYPT (last step)
##################################
sudo apt install -y certbot

certbot certonly --dry-run --email sister@bbg.ac.id --agree-tos --rsa-key-size 4096 --webroot -w /var/www/html -d sister.bbg.ac.id

certbot certonly --email sister@bbg.ac.id --agree-tos --rsa-key-size 4096 --webroot -w /var/www/html -d sister.bbg.ac.id


#####################
# POSTGRESQL 9.5
#####################
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/postgresql-pgdg.list > /dev/null
sudo apt-get update -y && sudo apt-get install postgresql-9.5 -y && sudo psql --version

sudo -u postgres psql
# Don't worry about "could not change directory to "/root": Permission denied"

# You can change 'postgresql123' with another actual password
ALTER USER postgres WITH ENCRYPTED PASSWORD 'postgresql123';

# If you did this correct, you should get the following output: ALTER ROLE
# Go ahead and quit by type:
\q

sudo nano /etc/postgresql/9.5/main/pg_hba.conf

# Change: local   all   postgres   peer
# To: local   all   postgres   md5
sudo service postgresql restart

# Now if we want to connect to PostgreSQL we can using the postgres user and a password.
psql -U postgres
# show list database
\l+

pg_dump -U postgres sister_db > sister_db.sql
pg_dump -U postgres sister_sandbox > sister_sandbox.sql

psql -U postgres
CREATE DATABASE sister_db;
CREATE DATABASE sister_sandbox;
\l+

psql -U postgres sister_db < sister_db.sql
psql -U postgres sister_sandbox < sister_sandbox.sql

#####################
# PHPPGADMIN 5.6
#####################
https://github.com/phppgadmin/phppgadmin/releases/download/REL_5-6-0/phpPgAdmin-5.6.0.zip
or
https://github.com/phppgadmin/phppgadmin/archive/refs/tags/REL_5-6-0.zip
nano conf/config.inc.php
# change: $conf['extra_login_security']= true;
# to    : $conf['extra_login_security']= false;

#####################
# PG-ADMIN 4 REL-1_1
#####################
https://github.com/pgadmin-org/pgadmin4/archive/refs/tags/REL-1_1.zip

#####################
# PG-ADMIN 3 REL-1_22_2
#####################
https://github.com/pgadmin-org/pgadmin3/archive/refs/tags/REL-1_22_2.zip


#####curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add
#####sudo sh -c 'echo "deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'
#####sudo apt-get install pgadmin4



# Solution 1
# Edit in .env file is located in the laravel 5 root directory
# Solution 2
# Change in the database.php file without env():
nano config/database.php
or
nano app/config/database.php
# change: â€˜defaultâ€™ => env(â€˜DB_CONNECTIONâ€™, â€˜mysqlâ€™),
# to    : â€˜defaultâ€™ => env(â€˜DB_CONNECTIONâ€™, â€˜pgsqlâ€™),
# set   :
'pgsql' => [
    'driver' => 'pgsql',
    'host' => env('DB_HOST', 'localhost'),
    'database' => env('DB_DATABASE', 'forge'),
    'username' => env('DB_USERNAME', 'forge'),
    'password' => env('DB_PASSWORD', ''),
    'charset' => 'utf8',
    'prefix' => '',
    'schema' => 'public',
],
# to    :
'pgsql' => [
    'driver' => 'pgsql',
    'host' => 'localhost',
    'database' => 'db_belajar',
    'username' => 'postgres',
    'password' => '1234',
    'charset' => 'utf8',
    'prefix' => '',
    'schema' => 'public',
],


# Close the laravel application server and restart again for clearing the cache.
php artisan serve
# Or you can do :
php artisan config:clear
# This will clear the cache in config files.
# Now it will definitely work! Cheers!


# Don't forget to clear your cache before testing:
php artisan config:cache
php artisan config:clear


# Laravel config/database.php uses the .env file for database name,username asnd password, Please change your .env file
DB_HOST=localhost
DB_DATABASE=my_project
DB_USERNAME=root
DB_PASSWORD=myproject
# After changing this run the below command:
composer dump-autoload
# then run your project
php artisan serve








# LATIHAN: create db
CREATE DATABASE belajar;
# list db
\l+
# select db
\c belajar
# show tables
\dt+
# before edit .env, if you don't have APP_KEY in .env, just run: php artisan key:generate
nano .env
	DB_CONNECTION=pgsql
	DB_HOST=localhost
	DB_PORT=5432
	DB_DATABASE=<nama-database>
	DB_USERNAME=<username>
	DB_PASSWORD=<password>
php artisan make:migration create_buku_table --create=buku
nano database/migrations/XXXX_XX_XX_XXXXXX_create_buku_table.php
	public function up()
	{
	    Schema::create('buku', function (Blueprint $table) {
		$table->bigIncrements('id');
		$table->string('judul', 60);
		$table->string('penulis', 30);
		$table->integer('stok');
		$table->boolean('buku_terjemahan')->default(false);
		$table->longText('deskripsi')->nullable();
		$table->timestamps();
	    });
	}
php artisan migrate
php artisan make:seeder TabelBukuSeeder
nano database/seeds/TabelBukuSeeder.php
	public function run()
	{
	    $faker = \Faker\Factory::create();
	    \DB::table('buku')->truncate();
	    for ($i=0; $i < 100; $i++) { 
		DB::table('buku')->insert([
		    'judul' => $faker->sentence(3),
		    'penulis' => $faker->name,
		    'stok' => $faker->numberBetween(1, 10),
		    'buku_terjemahan' => $faker->randomElement([true, false]),
		    'deskripsi' => $faker->text(100),
		    'created_at' => date('Y-m-d h:i:s'),
		    'updated_at' => date('Y-m-d h:i:s')
		]);
	    }
	}
nano database/seeds/DatabaseSeeder
	public function run()
	{
	    $this->call(TabelBukuSeeder::class);
	}
php artisan db:seed
# if no error, now table `buku` has 100 dummy data
