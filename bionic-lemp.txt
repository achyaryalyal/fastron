##################################
# Be root
##################################
sudo -i

##################################
# Make sure you have properly installed your public key in $HOME/.ssh/authorized_keys
# Make sure you have properly secured SSH config
##################################

##################################
# Update packages
##################################
sudo apt-get update && apt-get upgrade -y && apt-get autoremove -y --purge && apt-get autoclean -y

##################################
# Useful packages
##################################
sudo apt-get install -y haveged curl git unzip zip fail2ban htop nload nmap nmon ntp gnupg gnupg2 wget pigz tree ccze mycli geoip-bin geoip-database

# configure timezone. Select: Asia->Jakarta
sudo systemctl enable ntp && dpkg-reconfigure tzdata && date

# increase history size
export HISTSIZE=10000

# nanorc - Improved Nano Syntax Highlighting Files
wget https://raw.githubusercontent.com/scopatz/nanorc/master/install.sh -qO- | sh

# open_files limits
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/security.limits.conf > /etc/security/limits.conf

# secure shared memory
> /etc/fstab && echo "none /run/shm tmpfs defaults,ro 0 0" >>/etc/fstab

# IP hardening
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/50-ip-sec.conf > /etc/sysctl.d/50-ip-sec.conf && sudo sysctl --system

##################################
# ufw
##################################
sudo apt-get install -y ufw

# define firewall rules
sudo ufw logging low
sudo ufw default allow outgoing
sudo ufw default deny incoming

# ssh
CURRENT_SSH_PORT=$(grep "Port" /etc/ssh/sshd_config | awk -F " " '{print $2}') && echo $CURRENT_SSH_PORT
sudo ufw allow ??

# smtp
sudo ufw allow 25
    #sudo ufw allow 465
    #sudo ufw allow 587

# pop3
sudo ufw allow 110
    #sudo ufw allow 995

# imap
sudo ufw allow 143
    #sudo ufw allow 993

# nginx
sudo ufw allow http
sudo ufw allow https

#ntp
sudo ufw allow 123

sudo ufw show added
sudo ufw enable
service ssh restart

##################################
# MariaDB 10.3 install
##################################
wget -qO mariadb_repo_setup https://downloads.mariadb.com/MariaDB/mariadb_repo_setup && chmod +x mariadb_repo_setup && ./mariadb_repo_setup --mariadb-server-version=10.3 --skip-maxscale -y && rm mariadb_repo_setup && sudo apt-get update && sudo apt-get install -y mariadb-server
curl -sSL https://github.com/achyaryalyal/fastron/raw/master/mariadb/my.cnf > /etc/mysql/conf.d/my.cnf
mysql_secure_installation
  	# Change the root password? n
  	# Remove anonymous users? Y
  	# Disallow root login remotely? Y
  	# Remove test database and access to it? Y
  	# Reload privilege tables now? Y

##################################
# MariaDB tweaks
##################################
# stop mysql service to apply new InnoDB log file size
sudo service mysql stop

# mv previous log file
sudo mv /var/lib/mysql/ib_logfile0 /var/lib/mysql/ib_logfile0.bak
sudo mv /var/lib/mysql/ib_logfile1 /var/lib/mysql/ib_logfile1.bak

# increase mariadb open_files_limit
curl -sSL https://github.com/achyaryalyal/fastron/raw/master/mariadb/limits.conf > /etc/systemd/system/mariadb.service.d/limits.conf

# reload daemon
systemctl daemon-reload

# restart mysql
service mysql start

# change default `root` username to `panglima`
mysql -u root -p
show databases; use mysql; update user set user='panglima' where user='root'; flush privileges; exit;

# check performance tuning
mkdir /opt/mysql-tuner && cd /opt/mysql-tuner && wget https://github.com/major/MySQLTuner-perl/tarball/master && tar xf master && cd major-MySQLTuner-perl-* && ./mysqltuner.pl

# optimize and repair databases
mysqlcheck -u panglima -p --auto-repair -o --optimize --all-databases

##################################
# Install php7.2-fpm
##################################
sudo apt-get install -y php7.2-fpm php7.2-common php7.2-opcache php7.2-readline php7.2-json php7.2-bcmath php7.2-bz2 php7.2-cli php7.2-curl php7.2-dev php7.2-gd php-imagick php7.2-intl php7.2-ldap php7.2-mbstring php7.2-mysql php7.2-soap php7.2-sqlite3 php7.2-sybase php-xdebug php7.2-xml php7.2-xmlrpc php7.2-xsl php7.2-zip
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/php7.2-fpm/php.ini > /etc/php/7.2/fpm/php.ini
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/php7.2-fpm/www.conf > /etc/php/7.2/fpm/pool.d/www.conf
sudo service php7.2-fpm restart && php -v

##################################
# Install nginx
##################################
sudo apt-get install -y nginx nginx-extras && nginx -v

# configure worker_processes ===> cat /proc/cpuinfo | grep processor
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/nginx/nginx.conf > /etc/nginx/nginx.conf && cat /proc/cpuinfo | grep processor
nano nginx.conf

# create server block: master
curl -sSL https://github.com/achyaryalyal/fastron/raw/master/nginx/general.conf > /etc/nginx/general.conf
rm -rf /var/www/html /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default
mkdir -p /var/www/master && echo "<html><body><h2>Welcome to Nginx! My name is $(hostname).</h2></body></html>" | sudo tee -a /var/www/master/index.php
curl -sSL https://github.com/achyaryalyal/fastron/raw/master/nginx/master-www.conf > /etc/nginx/sites-available/master-www.conf && sudo ln -s /etc/nginx/sites-available/master-www.conf /etc/nginx/sites-enabled/

# checking nginx configuration
nginx -t

# reload nginx configuration
sudo service nginx reload

##################################
# Add fail2ban configurations
##################################



##################################
# Install Let's Encrypt
##################################
sudo apt-get install software-properties-common && sudo add-apt-repository ppa:certbot/certbot
sudo apt-get update && sudo apt-get install -y letsencrypt

# HTTPS: create Diffie-Hellman keys
openssl dhparam -dsaparam -out /etc/nginx/dhparam.pem 2048

# HTTPS: create ACME-challenge common directory
mkdir -p /var/www/_letsencrypt && chown -R www-data:www-data /var/www/_letsencrypt

# HTTPS: certbot (obtain certificates)
# disable before first run: ssl_certificate, ssl_certificate_key, ssl_trusted_certificate
certbot certonly --webroot -d example.com -d www.example.com -d dev.example.com -d data.example.com --email info@example.com -w /var/www/_letsencrypt -n --agree-tos --force-renewal

# Configure nginx
# to perform SSL

# Testing SSL grade
# open https://www.ssllabs.com/ssltest
