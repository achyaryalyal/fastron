===========================================================================
                 "Server tuning, is an art, not a science"
===========================================================================
----------------------------------------------------------------------------
----------------------------------------------------------------------------
      # 50 MINUTES INSTALL FASTRON IN UBUNTU SERVER 16.04 XENIAL XERUS
----------------------------------------------------------------------------
----------------------------------------------------------------------------
# SET DNS RECORD
### important record
A-------@--------[YOUR_IP_SERVER]
A-------blog-----[YOUR_IP_SERVER]
A-------data-----[YOUR_IP_SERVER]
A-------dev------[YOUR_IP_SERVER]
A-------mail-----[YOUR_IP_SERVER]
A-------webmail--[YOUR_IP_SERVER]
CNAME---www------[YOUR_DOMAIN]
MX------@--------[YOUR_DOMAIN]-----10
MX------mail-----[YOUR_DOMAIN]-----10
TXT-----@--------"v=spf1 a mx -all"
TXT-----_dmarc---"v=DMARC1;p=none;"
### other record
TXT-----mail._domainkey-----"v=DKIM1;k=rsa;p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7EU3x893fvYbk79/5hqHolU0H10u2hFKzvn9YzMOrc0FWSWpUC3UO7G2DAMkk5OGCATywPrlA1QUl7aoCVXXpZ5N/FHMORmW3iXo5MuRIyczYSDz9OqZ8aImXampX5Qap3j7tejNg2cCRqteZVpJS8OrF5yg38NeNKVbtyXKDS4VCTR3kQHiuAPX2UIkjOWyOixSYb7qqHpFMOoWms2me/c/uP/GQLet+TT2MX+7gNtZg+cR2IiZWiO6jJjp0ILDU97Cv5USoiLdqZC+9HfVTlEJ4tJhmcfu3QbldQ57mJ1zY1mS22HN7TMu/Olb9eSFSu9gyDdbNvuk7E+7dtWMKwIDAQAB"
### cloud kilat nameserver
NS-----ns1.kilatdomain.net
NS-----ns2.kilatdomain.net
NS-----ns3.kilatdomain.net
NS-----ns4.kilatdomain.net
### digital ocean nameserver
NS-----ns1.digitalocean.com.
NS-----ns2.digitalocean.com.
NS-----ns3.digitalocean.com.

# UPDATE, UPGRADE AND REBOOT ~ 10 MIN
apt-get update && apt-get upgrade -y && apt-get dist-upgrade -y

### Answer No when The default action is to keep your current version.
*** apt-compat (Y/I/N/O/D/Z) [default=N] ? N

### Reboot OS
reboot

# INSTALL OPENDKIM
### Setup it
apt-get install -y nano
###
apt-get remove --purge postfix
###
apt-get install -y bsd-mailx postfix
### General type of mail configuration: Internet Site
### System mail name: opensimka.com
apt-get install -y opendkim opendkim-tools

###
gpasswd -a postfix opendkim
nano /etc/opendkim.conf

### Uncomment and add value like this:
		Canonicalization   simple
		Mode               sv
		SubDomains         no

###  Replace simple with relaxed/simple in "Canonicalization"
		Canonicalization   relaxed/simple

### Add the following lines before "SubDomains"
		AutoRestart             yes
		AutoRestartRate         10/1M
		Background              yes
		DNSTimeout              5
		SignatureAlgorithm      rsa-sha256

### Add the following lines at the end of this the file
		#OpenDKIM user
		# Remember to add user postfix to group opendkim
		UserID             opendkim
		# Map domains in From addresses to keys used to sign messages
		KeyTable           /etc/opendkim/key.table
		SigningTable       refile:/etc/opendkim/signing.table
		# Hosts to ignore when verifying signatures
		ExternalIgnoreList  /etc/opendkim/trusted.hosts
		InternalHosts       /etc/opendkim/trusted.hosts

sudo mkdir /etc/opendkim

sudo mkdir /etc/opendkim/keys

sudo chown -R opendkim:opendkim /etc/opendkim

sudo chmod go-rw /etc/opendkim/keys

sudo nano /etc/opendkim/signing.table

### Paste it
*@smarttukang.com mail._domainkey.smarttukang.com

sudo nano /etc/opendkim/key.table

### Paste it
mail._domainkey.smarttukang.com smarttukang.com:mail:/etc/opendkim/keys/smarttukang.com/mail.private

sudo nano /etc/opendkim/trusted.hosts

### Add the following lines to the newly created file
127.0.0.1
localhost
*.smarttukang.com

sudo mkdir /etc/opendkim/keys/smarttukang.com

sudo opendkim-genkey -b 2048 -d smarttukang.com -D /etc/opendkim/keys/smarttukang.com -s mail -v

sudo chown opendkim:opendkim /etc/opendkim/keys/smarttukang.com/mail.private

sudo cat /etc/opendkim/keys/smarttukang.com/mail.txt

### Copy everything in the parentheses and paste into the value field. Delete all double quotes and white spaces.

### Add DNS TXT record with name "mail._domainkey" and paste to it's value.

### Test your configuration
sudo opendkim-testkey -d smarttukang.com -s mail -vvv

### If everything is OK, you will see: "key OK"

### Connect Postfix to OpenDKIM
sudo mkdir /var/spool/postfix/opendkim

sudo chown opendkim:postfix /var/spool/postfix/opendkim

sudo nano /etc/default/opendkim

### Replace first SOCKET with the following line
SOCKET="local:/var/spool/postfix/opendkim/opendkim.sock"

sudo nano /etc/postfix/main.cf

### Add the following lines after smtpd_relay_restriction section
		# Milter configuration
		# OpenDKIM
		milter_default_action = accept
		milter_protocol = 2
		smtpd_milters = local:/opendkim/opendkim.sock
		non_smtpd_milters = local:/opendkim/opendkim.sock

sudo service opendkim restart

sudo service postfix restart

### DKIM Check
echo "From: root@smarttukang.com
To: aymarxp@gmail.com
Subject: Test email
This is a test email."| sendmail -t

### If you click the show original button in Gmail, you should see "dkim=pass"

### Test to mail-tester.com
echo "From: root@smarttukang.com
To: ......<paste_here>......
Subject: Test email
This is a test email."| sendmail -t

Note: Mail Tester Result may be 8.8 and it's maximal score for you because Cloud Kilat has not rDNS.

# INSTALL INITIAL PACKAGES ~ 8 MIN
apt-get install -y build-essential software-properties-common python-software-properties checkinstall dpkg-dev sed wget curl ufw zip unzip git openssl libpcre3 zlib1g host geoip-bin geoip-database bc ntp nmap dnsutils

# INITIAL SERVER SETUP, ADD NEW USER WITH ROOT PRIVILEGES ~ 30 SEC

###1
adduser fastron && gpasswd -a fastron sudo && gpasswd -a fastron www-data

###2 TYPE root password and just ENTER when fill user profile

###3
groupadd admin && usermod -a -G admin fastron && dpkg-statoverride --update --add root admin 4750 /bin/su

# GENERATE PUBLIC KEY AUTHENTICATION ~ 1 MIN

###1
mkdir -p /home/fastron/.ssh && chmod 700 /home/fastron/.ssh

###2
cd /home/fastron/.ssh && ssh-keygen -t rsa
# type: fastron
# just empty the passphrase

###3
mv fastron.pub authorized_keys && chmod 600 authorized_keys && rm /home/fastron/.ssh/fastron

###4
sed -i "s/Port 22/Port 10022/" /etc/ssh/sshd_config
sed -i "s/LogLevel INFO/LogLevel VERBOSE/" /etc/ssh/sshd_config
sed -i "s/LoginGraceTime 120/LoginGraceTime 10/" /etc/ssh/sshd_config
sed -i "s/PermitRootLogin yes/PermitRootLogin no/" /etc/ssh/sshd_config
sed -i "s/X11Forwarding yes/X11Forwarding no/" /etc/ssh/sshd_config
service ssh restart
echo "Please login ssh with new user created"
exit

###5 login ssh with new user created

# GET AND CONFIGURE THE LATEST VERSION OF NGINX ~ 5 MIN

###1
mkdir -p /opt/buildfastron && cd /opt/buildfastron
wget http://nginx.org/keys/nginx_signing.key
apt-key add nginx_signing.key
bash -c 'echo "deb http://nginx.org/packages/mainline/ubuntu/ xenial nginx" > /etc/apt/sources.list.d/nginx-mainline.list'
sed -i '$ a deb-src http://nginx.org/packages/mainline/ubuntu/ xenial nginx' /etc/apt/sources.list.d/nginx-mainline.list
apt-get update

###2
apt-get build-dep -y nginx

###3
apt-get source nginx && ls

###4
# No Problem
# The 'W: Can't drop privileges' warning here is a known Apt bug (link is external) that doesn't affect successful delivery of our Nginx code
# Lanjut aja terus gan
cd /opt/buildfastron/nginx-* && ls

###5
sed -i "s/static char ngx_http_server_string\[\] =.*/static char ngx_http_server_string\[\] = \"Server\: FASTRON\" CRLF;/" /opt/buildfastron/nginx-*/src/http/ngx_http_header_filter_module.c
sed -i "s/static char ngx_http_server_full_string\[\] =.*/static char ngx_http_server_full_string\[\] = \"Server\: FASTRON\" CRLF;/" /opt/buildfastron/nginx-*/src/http/ngx_http_header_filter_module.c
sed -i "s/\"<hr><center>.*/\"\<hr\>\<center\>\<h2\>\<span id=\\\\\"g\\\\\"\>FA\<\/span\>\<span id=\\\\\"w\\\\\"\>STR\<\/span\>\<span id=\\\\\"s\\\\\"\>ON\<\/span\>\<\/h2\>\<\/center\>\<style\>h1\{color\:#777;font\:36px arial,sans-serif;margin\:30px 0;\} h2\{font\:20px arial,sans-serif;font-weight\:bold;margin\:5px 0;\} hr\{height\:5px;margin\:0;background\:#4285F4;\} \#g\{color\:\#EA4335;\} \#w\{color\:\#FBBC05;\} \#s\{color\:\#44B063;\}\<\/style\>\" CRLF/" /opt/buildfastron/nginx-*/src/http/ngx_http_special_response.c

###6
cd /opt/buildfastron/nginx-* && dpkg-buildpackage -b

###7
cd /opt/buildfastron && ls
dpkg -i nginx_*.deb
a2enmod proxy_fcgi setenvif
update-rc.d -f apache2 remove
apt-get remove -y --purge apache2

###8
nano /etc/nginx/nginx.conf

###9 replace first line to: user www-data;

###10
chown www-data:www-data /var/log/nginx/*
systemctl start nginx
nginx -t && service nginx restart && nginx -v

# INSTALL PHP5.6-FPM AND SECURING OS ~ 12 MIN

###1
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C && add-apt-repository -y ppa:ondrej/php
apt-get update
apt-get install -y php5.6 php5.6-fpm

###2 switch php7.0 to php5.6
update-alternatives --set php /usr/bin/php5.6
apt-get install -y php5.6-common php5.6-opcache php5.6-readline php5.6-dev php5.6-xdebug php5.6-mbstring php5.6-curl php5.6-gd php5.6-imagick php5.6-common php5.6-json php5.6-cli php5.6-intl php5.6-sybase php5.6-ldap php5.6-mysql php5.6-sqlite php5.6-soap php5.6-mcrypt php5.6-zip php5.6-xml php5.6-xmlrpc libgd-tools libmcrypt-dev mcrypt && php -v

###3
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/globalblacklist.conf > /etc/nginx/conf.d/globalblacklist.conf
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/security.conf > /etc/nginx/security.conf
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/php.conf > /etc/nginx/php.conf
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/cache.conf > /etc/nginx/cache.conf
rm -r -f /etc/nginx/nginx.conf/default.conf
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/nginx.conf > /etc/nginx/nginx.conf
sed -i '$ a # Custom parameters' /etc/nginx/fastcgi_params
sed -i '$ a fastcgi_connect_timeout 180s;' /etc/nginx/fastcgi_params
sed -i '$ a fastcgi_send_timeout 600s;' /etc/nginx/fastcgi_params
sed -i '$ a fastcgi_read_timeout 600s;' /etc/nginx/fastcgi_params
sed -i '$ a fastcgi_intercept_errors on;' /etc/nginx/fastcgi_params
sed -i '$ a fastcgi_max_temp_file_size 0;' /etc/nginx/fastcgi_params
sed -i '$ a fastcgi_pass 127.0.0.1:9000;' /etc/nginx/fastcgi_params
sed -i '$ a fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;' /etc/nginx/fastcgi_params
sed -i '$ a fastcgi_index index.php;' /etc/nginx/fastcgi_params

###4
mkdir -p /usr/share/fastron/master

bash -c 'echo "<?php echo \"<h1>It works #www</h1>\";" > /usr/share/fastron/master/index.php'
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/master-www.conf > /etc/nginx/conf.d/master-www.conf
rm -r -f /etc/nginx/conf.d/default.conf /usr/share/html

mkdir -p /usr/share/fastron/development

bash -c 'echo "<?php echo \"<h1>It works #dev</h1>\";" > /usr/share/fastron/development/index.php'
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/development-dev.conf > /etc/nginx/conf.d/development-dev.conf

mkdir -p /usr/share/fastron/mail

bash -c 'echo "<?php echo \"<h1>It works #mail</h1>\";" > /usr/share/fastron/mail/index.php'
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/mail-mail.conf > /etc/nginx/conf.d/mail-mail.conf

mkdir -p /usr/share/fastron/webmail

bash -c 'echo "<?php echo \"<h1>It works #webmail</h1>\";" > /usr/share/fastron/webmail/index.php'
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/webmail-webmail.conf > /etc/nginx/conf.d/webmail-webmail.conf

mkdir -p /usr/share/fastron/websession && chmod 700 -R /usr/share/fastron/websession

chown -R www-data:www-data /usr/share/fastron

nginx -t && service nginx restart

###5
sed -i "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/" /etc/php/5.6/fpm/php.ini
sed -i "s/;date.timezone =.*/date.timezone = Asia\/Jakarta/" /etc/php/5.6/fpm/php.ini
sed -i "s/;default_charset =.*/default_charset = \"UTF-8\"/" /etc/php/5.6/fpm/php.ini
sed -i "s/display_errors =.*/display_errors = On/" /etc/php/5.6/fpm/php.ini
sed -i "s/display_startup_errors =.*/display_startup_errors = On/" /etc/php/5.6/fpm/php.ini
sed -i "s/;error_log =.*/error_log = \/var\/log\/php.log/" /etc/php/5.6/fpm/php.ini
sed -i "s/expose_php =.*/expose_php = Off/" /etc/php/5.6/fpm/php.ini
sed -i "s/max_execution_time =.*/max_execution_time = 60/" /etc/php/5.6/fpm/php.ini
sed -i "s/;max_input_vars =.*/max_input_vars = 5000/" /etc/php/5.6/fpm/php.ini
sed -i "s/memory_limit =.*/memory_limit = 512M/" /etc/php/5.6/fpm/php.ini
sed -i "s/;upload_tmp_dir =.*/upload_tmp_dir = \/tmp/" /etc/php/5.6/fpm/php.ini
sed -i "s/upload_max_filesize =.*/upload_max_filesize = 20M/" /etc/php/5.6/fpm/php.ini
sed -i "s/post_max_size =.*/post_max_size = 20M/" /etc/php/5.6/fpm/php.ini
sed -i "s/max_file_uploads =.*/max_file_uploads = 100/" /etc/php/5.6/fpm/php.ini
sed -i "s/;realpath_cache_size =.*/realpath_cache_size = 256k/" /etc/php/5.6/fpm/php.ini
sed -i "s/;realpath_cache_ttl =.*/realpath_cache_ttl = 600/" /etc/php/5.6/fpm/php.ini
sed -i "s/disable_functions =.*/disable_functions = pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,show_source,system,shell_exec,passthru,exec,phpinfo,popen,proc_open,curl_multi_exec/" /etc/php/5.6/fpm/php.ini
sed -i "s/;session.cookie_secure =.*/session.cookie_secure = 1/" /etc/php/5.6/fpm/php.ini
sed -i "s/session.use_only_cookies =.*/session.use_only_cookies = 1/" /etc/php/5.6/fpm/php.ini
sed -i "s/session.name =.*/session.name = fastron/" /etc/php/5.6/fpm/php.ini
sed -i "s/session.cookie_lifetime =.*/session.cookie_lifetime = 0/" /etc/php/5.6/fpm/php.ini
sed -i "s/session.cookie_httponly =.*/session.cookie_httponly = 1/" /etc/php/5.6/fpm/php.ini
sed -i "s/session.use_trans_sid =.*/session.use_trans_sid = 0/" /etc/php/5.6/fpm/php.ini
sed -i "s/session.hash_function =.*/session.hash_function = sha512/" /etc/php/5.6/fpm/php.ini
sed -i "s/session.hash_bits_per_character =.*/session.hash_bits_per_character = 5/" /etc/php/5.6/fpm/php.ini
sed -i "s/;session.entropy_length =.*/session.entropy_length = 128/" /etc/php/5.6/fpm/php.ini
sed -i "s/;session.entropy_file =.*/session.entropy_file = \/dev\/urandom/" /etc/php/5.6/fpm/php.ini
sed -i "s/listen.owner =.*/listen.owner = www-data/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/listen.group =.*/listen.group = www-data/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/;listen.mode =.*/listen.mode = 0660/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/listen =.*/listen = 127.0.0.1:9000/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/pm =.*/pm = dynamic/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/pm.max_children =.*/pm.max_children = 4000/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/pm.start_servers =.*/pm.start_servers = 4/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/pm.min_spare_servers =.*/pm.min_spare_servers = 2/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/pm.max_spare_servers =.*/pm.max_spare_servers = 6/" /etc/php/5.6/fpm/pool.d/www.conf
sed -i "s/;pm.max_requests =.*/pm.max_requests = 50000/" /etc/php/5.6/fpm/pool.d/www.conf
service php5.6-fpm restart

# HARDEN NETWORK WITH SYSCTL SETTINGS
sed -i '$ a net.ipv4.conf.default.rp_filter=1' /etc/sysctl.conf
sed -i '$ a net.ipv4.conf.all.rp_filter=1' /etc/sysctl.conf
sed -i '$ a net.ipv4.conf.all.accept_source_route = 0' /etc/sysctl.conf
sed -i '$ a net.ipv6.conf.all.accept_source_route = 0' /etc/sysctl.conf
sed -i '$ a net.ipv4.conf.all.accept_redirects = 0' /etc/sysctl.conf
sed -i '$ a net.ipv6.conf.all.accept_redirects = 0' /etc/sysctl.conf
sed -i '$ a net.ipv4.conf.all.send_redirects = 0' /etc/sysctl.conf
sed -i '$ a net.ipv4.tcp_syncookies=1' /etc/sysctl.conf
sysctl -p

# PREVENT IP SPOOFING
sed -i '$ a nospoof on' /etc/host.conf

# DISABLE RPCBIND (PORTMAPPER)
cd /etc/init.d && sudo update-rc.d -f rpcbind remove

# REMOVE SOFTWARE LIKE THE DHCP CLIENT AND FTP
apt-get remove -y isc-dhcp-client ftp info eject

# DISABLE IPV6 (IF NOT BEING USED)
sudo ip6tables -P INPUT DROP
sudo ip6tables -P OUTPUT DROP
sudo ip6tables -P FORWARD DROP
sed -i '$ a net.ipv6.conf.all.disable_ipv6 = 1' /etc/sysctl.conf
sed -i '$ a net.ipv6.conf.default.disable_ipv6 = 1' /etc/sysctl.conf
sed -i '$ a net.ipv6.conf.lo.disable_ipv6 = 1' /etc/sysctl.conf
sysctl -p
ifconfig

# CONFIGURE ALLOWED PORT

###1
ufw deny 22/tcp && ufw allow 10022/tcp
ufw allow 80/tcp && ufw allow 443/tcp
ufw allow 25/tcp && ufw allow 465/tcp && ufw allow 587/tcp && ufw allow 110/tcp && ufw allow 995/tcp && ufw allow 143/tcp && ufw allow 993/tcp && ufw allow 8891/tcp
ufw enable

###2
service ssh restart

###3
ufw show added

# SECURE SHARED MEMORY
sed -i "s/\/run\/shm/\/dev\/shm/" /etc/fstab

# CONFIGURE TIMEZONES AND NETWORK TIME PROTOCOL
# Select: Asia->Jakarta
dpkg-reconfigure tzdata && date

# JUST IF you don't have SWAP...! So Create a Swap File
# SKIP JIKA CLOUD KILAT, karena SWAP sudah otomatis terbuat
# Ini perlu agar system lebih stabil apalagi untuk VM yang memiliki beberapa database. Ukuran swap biasanya sama dengan atau dua kali RAM. Ini contoh untuk buat swap 1 Gygabyte:
# Buang komen di bawah ini, jika mau buat swap:
#sudo fallocate -l 1G /swapfile && sudo chmod 600 /swapfile && sudo mkswap /swapfile && sudo swapon /swapfile && sudo sh -c 'echo "/swapfile none swap sw 0 0" >> /etc/fstab'

# INSTALL FAIL2BAN ~ 1 MINUTE
###1
apt-get install -y fail2ban

###2
cp /etc/fail2ban/fail2ban.conf /etc/fail2ban/fail2ban.local
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/jail.local > /etc/fail2ban/jail.local
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/nginx-dos.conf > /etc/fail2ban/filter.d/nginx-dos.conf
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/nginx-req-limit.conf > /etc/fail2ban/filter.d/nginx-req-limit.conf
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/nginx-badrequests.conf > /etc/fail2ban/filter.d/nginx-badrequests.conf
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/nginx-noproxy.conf > /etc/fail2ban/filter.d/nginx-noproxy.conf
cp /etc/fail2ban/filter.d/apache-badbots.conf /etc/fail2ban/filter.d/nginx-badbots.conf
service fail2ban restart && fail2ban-client status

###3 show status of all fail2ban jails at once
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/fail2ban-allstatus.sh > /etc/fail2ban/fail2ban-allstatus.sh
chmod 755 /etc/fail2ban/fail2ban-allstatus.sh
cp /etc/fail2ban/fail2ban-allstatus.sh /usr/bin/.
fail2ban-allstatus.sh

===========================================================================
========= Okay, NGINX & PHP-FPM have been installed successfully ==========
=============== Next, install MariaDB, Monit & phpMyAdmin =================
===========================================================================

# INSTALL MARIADB (BASIC) ~ 3 MIN
###1
apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8 && add-apt-repository 'deb [arch=amd64,i386,ppc64el] http://sumberterbuka.beritagar.id/mariadb/repo/10.2/ubuntu xenial main' && apt-get update && apt-get install -y mariadb-server

###2
mysql_secure_installation
	# Change the root password? n
	# Remove anonymous users? Y
	# Disallow root login remotely? Y
	# Remove test database and access to it? Y
	# Reload privilege tables now? Y

###3
rm -r -f /etc/mysql/my.cnf
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/my.cnf > /etc/mysql/my.cnf
service mysql restart

###4 testing and change default `root` username to `panglima`
mysql -u root -p
show databases;
use mysql;
update user set user='panglima' where user='root';
flush privileges;
exit;
# mysql -u panglima -p

###5 check performance tuning
mkdir /opt/mysql-tuner && cd /opt/mysql-tuner && wget https://github.com/major/MySQLTuner-perl/tarball/master && tar xf master
cd major-MySQLTuner-perl-*
./mysqltuner.pl

###6 optimize and repair databases, sometimes MariaDB database tables get crashed quite easily, especially when unexpected server shut down, sudden file system corruption or during copy operation, when database is still accessed. Surprisingly, there is a free open source tool called 'mysqlcheck', which automatically check, repair and optimize databases of all tables in Linux
mysqlcheck -u panglima -p --auto-repair -o --optimize --all-databases

# INSTALL MONIT ~ 2 MIN
###1
sudo apt-get install monit

###2
nano /etc/monit/monitrc

###3 make sure set httpd uncommented with following lines
set httpd port 2812 and
  use address localhost
  allow localhost
  allow admin:monit
  allow @monit
  allow @users readonly

###4 add MySQL server in Monit configuration file to monitor it before "## Includes"
check process mysqld with pidfile /var/run/mysqld/mysqld.pid
  start program = "/etc/init.d/mysql start"
  stop program = "/etc/init.d/mysql stop"

###5 
monit -t
service monit restart
monit summary
monit status
# if there is many error: Include failed
# don't worry, this is because in monitrc file, 'conf.d' and 'conf-enabled' folders are included, which are now actually empty

# INSTALL PHPMYADMIN
###1
mkdir -p /usr/share/fastron/phpmyadmin && cd /usr/share/fastron/phpmyadmin && wget https://files.phpmyadmin.net/phpMyAdmin/4.7.7/phpMyAdmin-4.7.7-english.zip && unzip phpMyAdmin-4.7.7-english.zip && mv phpMyAdmin-4.7.7-english*/* . && rm -r -f phpMyAdmin-* && mv config.sample.inc.php config.inc.php

###2
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/phpmyadmin-data.conf > /etc/nginx/conf.d/phpmyadmin-data.conf
chown -R www-data:www-data /usr/share/fastron
nginx -t && service nginx restart

###3
sed -i "s/$cfg\['blowfish_secret'\] =.*/$cfg\['blowfish_secret'\] = 'spalDing46muLti99Balkans';\n\$cfg\['LoginCookieValidity'\] = '7200';/" /usr/share/fastron/phpmyadmin/config.inc.php
sed -i "s/$i++;/$i++;\n\$cfg\['Servers'\]\[\$i\]\['hide_db'\] = 'mysql|information_schema|performance_schema|test|phpmyadmin';/" /usr/share/fastron/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['DefaultCharset'] = 'utf8';" /usr/share/fastron/phpmyadmin/config.inc.php
sed -i "$ a \$cfg['DefaultConnectionCollation'] = 'utf8mb4_general_ci';" /usr/share/fastron/phpmyadmin/config.inc.php

===========================================================================
=== Okay, MariaDB, Monit & phpMyAdmin have been installed successfully ====
====================== Next, install Let's Encrypt ========================
===========================================================================

# INSTALL LET'S ENCRYPT ~ 9 MIN

###1
apt-get install -y letsencrypt

###2
letsencrypt certonly --agree-tos --email aymarxp@gmail.com --webroot -w /usr/share/fastron/master -d smarttukang.com -d www.smarttukang.com -w /usr/share/fastron/development -d dev.smarttukang.com -w /usr/share/fastron/phpmyadmin -d data.smarttukang.com -w /usr/share/fastron/mail -d mail.smarttukang.com -w /usr/share/fastron/webmail -d webmail.smarttukang.com

###3
mkdir -p /usr/share/cert && openssl dhparam -out /usr/share/cert/dh.pem 2048 && chmod 600 /usr/share/cert/dh.pem

###4
sed -i "s/###https###/ /" /etc/nginx/conf.d/master-www.conf
sed -i "s/###https###/ /" /etc/nginx/conf.d/development-dev.conf
sed -i "s/listen 80;###/ /" /etc/nginx/conf.d/development-dev.conf
sed -i "s/###https###/ /" /etc/nginx/conf.d/phpmyadmin-data.conf
sed -i "s/listen 80;###/ /" /etc/nginx/conf.d/phpmyadmin-data.conf
sed -i "s/###https###/ /" /etc/nginx/conf.d/mail-mail.conf
sed -i "s/listen 80;###/ /" /etc/nginx/conf.d/mail-mail.conf
sed -i "s/###https###/ /" /etc/nginx/conf.d/webmail-webmail.conf
sed -i "s/listen 80;###/ /" /etc/nginx/conf.d/webmail-webmail.conf
nginx -t && service nginx restart

###5 just perform a renewal test using "dry-run" option
letsencrypt renew --dry-run --agree-tos --email aymarxp@gmail.com

###6
nano /etc/sudoers

###7 Add this line BEFORE the # includedir /etc/sudoers.d

	### Allow fastron user to reload nginx
	fastron ALL=NOPASSWD: /usr/sbin/service nginx reload
	
	### Allow fastron user to perform letsencrypt certificate renewals
	fastron ALL=NOPASSWD: /usr/bin/letsencrypt

###8 process certificates renewal
letsencrypt renew --agree-tos --email aymarxp@gmail.com

###9 edit crontab
crontab -e

###10 paste it to cronjob
# Set up the cron job to run every day at 02:00, 02:01, 02:02, 02:03 AM for instance
0 2 * * * /usr/bin/letsencrypt renew --agree-tos --email aymarxp@gmail.com
1 2 * * * /etc/init.d/nginx restart
2 2 * * * root /etc/init.d/nginx restart
3 2 * * * sudo service nginx restart

# TESTING YOUR
# SSL GRADE at https://www.ssllabs.com/ssltest

===========================================================================
=========== Okay, Let's Encrypt has been installed successfully ===========
===========================================================================

**************************************
# BONUS: INSTALL FASTRON IDE
**************************************
###1
cd /usr/share/fastron/master
wget https://github.com/achyaryalyal/fastron/raw/master/fastron-ide.tar.gz
tar -zxvf fastron-ide.tar.gz -C /usr/share/fastron/master/
rm fastron-ide.tar.gz
chown -R www-data:www-data /usr/share/fastron

###2 Edit username to ...
nano /usr/share/fastron/master/ide/data/users.php

###3 Login [DOMAIN_NAME]/ide

**********************************************************
# BONUS: INSTALL WORDPRESS 4.7 WITH NO SSL
**********************************************************
###1
cd /usr/share/fastron
wget https://id.wordpress.org/wordpress-4.7-id_ID.tar.gz
tar xvf wordpress-4.7-id_ID.tar.gz
rm wordpress-4.7-id_ID.tar.gz
chown -R www-data:www-data /usr/share/fastron
ls

###2 create a database and user for your WordPress Site
# login phpmyadmin
# create new database "wordpress" with collation "utfmb4_general_ci"
# back to localhost, click menu "User accounts" and then "Add user", don't forget to check all the global privileges. Submit.
# click submenu "database"
# click database "wordpress" and Go
# check all Database-specific privileges

###3
cd /usr/share/fastron/wordpress
cp wp-config-sample.php wp-config.php

###4 grab secure values from the WordPress secret key generator
curl -s https://api.wordpress.org/secret-key/1.1/salt/

###5 paste that salt key and this value under that
define('WP_DEBUG',           false);
define('WP_POST_REVISIONS',  false);
define('DISALLOW_FILE_EDIT', true);

###6 copy the output and paste here
nano /usr/share/fastron/wordpress/wp-config.php

###6 set DB_NAME, DB_USER, DB_PASSWORD and DB_COLLATE

###7
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/wordpress-blog.conf > /etc/nginx/conf.d/wordpress-blog.conf
curl -sSL https://downloads.wordpress.org/plugin/captcha.4.2.8.zip > /usr/share/fastron/wordpress/wp-content/plugins/captcha.zip
cd /usr/share/fastron/wordpress/wp-content/plugins
unzip captcha.zip
rm captcha.zip
chown -R www-data:www-data /usr/share/fastron
mkdir -p /usr/share/fastron/wordpress/wp-content/uploads
chmod -R 775 /usr/share/fastron/wordpress/wp-content/uploads
nginx -t && service nginx restart

###8 Finish the installation at blog.[DOMAIN_NAME]

###9 Login at blog.[DOMAIN_NAME]/wp-admin

###10 Activate Captcha plugin & configure it to just use operasi Tambahan (+) dan Angka saja

###11 Add this "/%category%/%postname%.html" in the custom structure of permalink settings and add "." in category base then update the settings

*********************************
# BONUS: INSTALL RAINLOOP WEBMAIL
*********************************
###1
cd /usr/share/fastron && wget -qO- https://repository.rainloop.net/installer.php | php
###2
mv index.php data rainloop /usr/share/fastron/webmail && cd /usr/share/fastron/webmail && ls
###3
find . -type d -exec chmod 755 {} \;
###4
find . -type f -exec chmod 644 {} \;
###5
chown -R www-data:www-data /usr/share/fastron/webmail
###6
nginx -t && service nginx restart
###7 Access admin panel---> https://webmail.smartukang.com/?admin
###8 Default login is "admin", password is "12345"
###9 Update new password for admin
###10 Add Domain in menu Domains

*********************************
# BONUS: INSTALL CLAMAV
*********************************
###1
sudo apt-get install clamav clamav-daemon clamav-freshclam
###2 check version
clamdscan -V
###3
sudo /etc/init.d/clamav-freshclam stop
sudo freshclam
sudo /etc/init.d/clamav-freshclam start
###4 enable notify and schedule the scan
curl -sSL https://raw.githubusercontent.com/achyaryalyal/fastron/master/clamscan_daily.sh > /clamscan_daily.sh
###5 make sure it's executable
chmod 0755 /clamscan_daily.sh
###6 add script to crontab
	# Let’s create a hard link as below:
	ln /clamscan_daily.sh /etc/cron.daily/clamscan_daily
	# Check to make sure that the hard link was created:
	# ls -li /etc/cron.daily/clamscan_daily
###7 troubleshoting
	# If you get the following error: LibClamAV Error: cli_loaddb(): No supported database files found in /var/lib/clamav/
	# So update the database manually:
	freshclam -v
	# If you get the following error: Clamd was NOT notified
	# So restart the daemon
	service clamav-daemon restart
